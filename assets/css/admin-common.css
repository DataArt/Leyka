/** == Seetings and variables (_presets.scss)  == **/
/*:root {
  --color-main: 		#1db318;
  --color-main-dark: 	#1aa316;
  --color-main-light: 	#8ae724;
}*/
/** == Elements == **/
/** == Mq == **/
/** == Typography (_typo.scss) == **/
@import url("https://fonts.googleapis.com/css?family=Roboto:400,400i,500,700,900&subset=cyrillic");
.leyka-dashboard-footer {
  margin-top: 32px;
  margin-left: 12px;
}

.leyka-dashboard-footer.leyka-wizard-footer {
  margin-top: 16px;
  margin-bottom: 16px;
  margin-left: 12px;
}

.leyka-dashboard-footer.leyka-settings-footer {
  margin-left: 72px;
  margin-bottom: -20px;
}

.leyka-admin-wizard .leyka-wizard .leyka-admin-footer {
  margin-left: 0px;
  position: absolute;
  bottom: 22px;
}

.leyka-admin-wizard .leyka-wizard .leyka-admin-footer .links a,
.leyka-admin-wizard .leyka-wizard .leyka-admin-footer a.te-st-logo {
  text-decoration: none;
  border-bottom: none;
}

.leyka-admin-wizard .leyka-wizard .leyka-admin-footer .links a:hover, .leyka-admin-wizard .leyka-wizard .leyka-admin-footer .links a:active, .leyka-admin-wizard .leyka-wizard .leyka-admin-footer .links a:focus,
.leyka-admin-wizard .leyka-wizard .leyka-admin-footer a.te-st-logo:hover,
.leyka-admin-wizard .leyka-wizard .leyka-admin-footer a.te-st-logo:active,
.leyka-admin-wizard .leyka-wizard .leyka-admin-footer a.te-st-logo:focus {
  border-bottom: none;
  text-decoration: underline;
}

.leyka-admin-wizard #wpbody-content > .leyka-admin-footer {
  display: none;
}

.leyka-admin-footer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.leyka-admin-footer .te-st-logo {
  margin-right: 24px;
}

.leyka-admin-footer .te-st-logo img {
  width: auto;
  height: auto;
}

.leyka-admin-footer .links {
  font-size: 14px;
  line-height: 21px;
  font-weight: 400;
  font-size: 12px;
  line-height: 14px;
  padding-top: 9px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end;
}

.leyka-admin-footer .links a {
  text-decoration: none;
  border-bottom: none;
}

.leyka-admin-footer .links a:hover, .leyka-admin-footer .links a:active, .leyka-admin-footer .links a:focus {
  border-bottom: none;
  text-decoration: underline;
}

.leyka-admin-footer .links .te-st-link {
  line-height: 14px;
  margin-right: 40px;
}

.leyka-admin-footer .links .te-st-link span {
  font-weight: 500;
  display: block;
  color: #44444a;
}

.leyka-admin-footer .links .te-st-link a {
  font-weight: 500;
  text-decoration: none;
  color: #006799;
}

.leyka-admin-footer .links .info-links {
  margin-top: 8px;
}

.leyka-admin-footer .links .info-links a {
  font-weight: 500;
  text-decoration: none;
  line-height: 12px;
  color: #006799;
  margin-right: 4px;
}

.leyka-admin-footer .links .info-links a:after {
  content: " ";
  border-right: 1px solid #aaaaaa;
  display: inline-block;
  width: 1px;
  height: 9px;
  margin-bottom: 0px;
  padding-left: 8px;
}

.leyka-admin-footer .links .info-links a:last-of-type {
  margin-right: 0px;
}

.leyka-admin-footer .links .info-links a:last-of-type:after {
  display: none;
}

.post-type-leyka_campaign #wpfooter,
.post-type-leyka_donation #wpfooter {
  -webkit-transform: translateY(60px);
  -ms-transform: translateY(60px);
  transform: translateY(60px);
}

.post-type-leyka_campaign #wpfooter .leyka-admin-footer,
.post-type-leyka_donation #wpfooter .leyka-admin-footer {
  margin-bottom: 16px;
  margin-left: 0px;
  height: 49px;
}

.wp-admin.leyka-admin-dashboard .leyka-dashboard-footer {
  margin-left: 72px;
}

#ui-datepicker-div {
  display: none;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
